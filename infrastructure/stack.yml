Resources:
  EmailHandlerFunction:
    Type: AWS::Lambda::Function
    Properties:
      Handler: handler.handler
      Role: !GetAtt EmailHandlerRole.Arn
      Code:
        ZipFile: |
          def handler(event, context):
            return None
      Runtime: python3.6
      Environment:
        Variables:
          EMAIL_BUCKET: !Ref EmailBucket
          DATA_BUCKET: !Ref DataBucket
  EmailHandlerRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:*
                Resource: arn:aws:logs:*:*:*
              - Effect: Allow
                Action:
                  - s3:GetObject
                Resource: !GetAtt EmailBucket.Arn
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                Resource: !GetAtt DataBucket.Arn
  EmailBucket:
    Type: AWS::S3::Bucket
  DataBucket:
    Type: AWS::S3::Bucket
